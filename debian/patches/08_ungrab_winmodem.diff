
Index: slmodem-2.9.11-20080817/ungrab-winmodem/Readme.txt
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ slmodem-2.9.11-20080817/ungrab-winmodem/Readme.txt	2008-09-18 09:32:09.000000000 +0200
@@ -0,0 +1,42 @@
+---------------
+
+Ungrab-Winmodem
+
+---------------
+
+This loadable module was written by Sasha Khapyorsky  - April 14, 2005
+
+Purpose:
+=======
+Release slmodem devices which have been detected by Linux as if they were true
+hardware modems and assigned by Linux to work with the standard serial driver.
+
+When is it helpful?
+===================
+When you see something like:
+here the "modprobe slamr debug=3" outout:
+slamr: unsupported module, tainting kernel.
+slamr: module license 'Smart Link Ltd.' taints kernel.
+slamr: SmartLink AMRMO modem.
+slamr: device 10b9:5457 is grabbed by driver serial
+
+or the same after two commands   modprobe slamr
+                                 dmesg | grep slamr
+
+Installation:
+=============
+
+You must be root or superuser
+
+make
+make install
+
+Usage:
+======
+
+modprobe ungrab-winmodem
+
+The modprobe command MUST be given BEFORE loading slamr
+
+This text written by Jacques Goldberg
+Questions: discuss@linmodems.org    , Subject: ungrab-winmodem
Index: slmodem-2.9.11-20080817/ungrab-winmodem/ungrab-winmodem.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ slmodem-2.9.11-20080817/ungrab-winmodem/ungrab-winmodem.c	2008-09-18 09:33:45.000000000 +0200
@@ -0,0 +1,101 @@
+/*
+ * Copyright (c) 2005, linmodems.org
+ * 
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License.
+ *
+ * Sasha K (sashak@smlink.com)
+ *
+ * ungrab-winmodem.c - try to release softmodem device when grabbed by others.
+ *
+ 
+  *	20070505: -Renamed Motorola device 5600
+  * http://archives.linmodems.org/26589
+  * Marvin Stodolsky (marvin.stodolsky@gmail.com)
+  * Alvaro Aguirre (alvaro.aguirre@gmail.com)
+  */
+
+
+#include <linux/version.h>
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
+#include <linux/config.h>
+#endif
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/pci.h>
+#include <linux/kernel.h>
+
+#define PCI_DEVICE_ID_ALI5457			0x5457
+#define PCI_DEVICE_ID_ALI5459			0x5459
+#define PCI_DEVICE_ID_ALI545A			0x545A
+
+#define PCI_VENDOR_ID_SMARTLINK                 0x2000		
+#define PCI_VENDOR_ID_SMARTLINK_1		0x163c
+#define PCI_VENDOR_ID_SMARTLINK_2		0x10a5
+#define PCI_VENDOR_ID_SMARTLINK_3		0x2003
+#define PCI_DEVICE_ID_SL2800			0x2800
+#define PCI_DEVICE_ID_SL1900			0x3052
+#define PCI_DEVICE_ID_ND92XPA                   0x8800 /* ND92XPA */
+#define PCI_VENDOR_ID_MOTOROLA                  0x1057 /* Motorola */
+#define PCI_VENDOR_ID_SLI1543                   0x1543 /* Silicon Inst 1543:3052 sub 1543:3000 */
+
+
+static struct pci_device_id softmodem_pci_tbl [] __devinitdata = {
+	/* 1543:3052 */
+	{PCI_VENDOR_ID_SLI1543, PCI_DEVICE_ID_SL1900, PCI_ANY_ID, PCI_ANY_ID },
+	/* 1057:3052 */
+	{PCI_VENDOR_ID_MOTOROLA, PCI_DEVICE_ID_SL1900, PCI_ANY_ID, PCI_ANY_ID },
+	/* 163c:3052 */
+	{PCI_VENDOR_ID_SMARTLINK_1, PCI_DEVICE_ID_SL1900, PCI_ANY_ID, PCI_ANY_ID },
+	/* 10a5:3052 */
+	{PCI_VENDOR_ID_SMARTLINK_2, PCI_DEVICE_ID_SL1900, PCI_ANY_ID, PCI_ANY_ID },
+	/* 10b9:5459 */
+	{PCI_VENDOR_ID_AL, PCI_DEVICE_ID_ALI5459, PCI_ANY_ID, PCI_ANY_ID },
+	/* 10b9:5457 */
+	{PCI_VENDOR_ID_AL, PCI_DEVICE_ID_ALI5457, PCI_ANY_ID, PCI_ANY_ID },
+	/* 10b9:545a */
+	{PCI_VENDOR_ID_AL, PCI_DEVICE_ID_ALI545A, PCI_ANY_ID, PCI_ANY_ID },
+	/* 2000:2800 */
+	{PCI_VENDOR_ID_SMARTLINK, PCI_DEVICE_ID_SL2800, PCI_ANY_ID, PCI_ANY_ID },
+	/* 2003:8800 */
+	{PCI_VENDOR_ID_SMARTLINK_3, PCI_DEVICE_ID_ND92XPA, PCI_ANY_ID, PCI_ANY_ID },
+	/* pctel HSP1688 */
+	{ 0x134d, 0x2189, PCI_ANY_ID, PCI_ANY_ID },
+	/* phillips pci modem */
+	{ 0x1131, 0x3400, PCI_ANY_ID, PCI_ANY_ID },
+	{0,}
+};
+
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,13)
+#define pci_match_id(tbl, dev) pci_match_device(tbl, dev)
+#endif
+
+static int __init softmodem_release_init(void)
+{
+	struct pci_dev *dev = NULL;
+	struct device *reldev;
+        while ((dev = pci_find_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
+		if(pci_match_id(softmodem_pci_tbl, dev) && pci_dev_driver(dev) &&
+		   (reldev = get_device(&dev->dev)) ) {
+			printk(KERN_INFO "device %04x:%04x is grabbed by driver %s: try to release\n",
+				  dev->vendor, dev->device,
+				  (reldev&&reldev->driver) ? reldev->driver->name : "unknown");
+			device_release_driver(reldev);
+			put_device(reldev);
+		}
+	}
+	return 0;
+}
+
+static void __exit softmodem_release_exit(void)
+{
+}
+
+module_init(softmodem_release_init);
+module_exit(softmodem_release_exit);
+
+MODULE_AUTHOR("linmodems.org");
+MODULE_DESCRIPTION("No driver - just try release softmodem device");
+MODULE_LICENSE("GPL");
Index: slmodem-2.9.11-20080817/ungrab-winmodem/Makefile
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ slmodem-2.9.11-20080817/ungrab-winmodem/Makefile	2008-09-18 09:32:09.000000000 +0200
@@ -0,0 +1,23 @@
+
+KERNEL_VER:=$(shell uname -r)
+KERNEL_DIR:=/lib/modules/$(KERNEL_VER)/build
+INSTALL_DIR:=/lib/modules/$(KERNEL_VER)/extra
+
+obj-m := ungrab-winmodem.o
+
+
+all:
+	$(MAKE) modules -C $(KERNEL_DIR) SUBDIRS=$(shell pwd)
+
+clean:
+	$(RM) *.o *.ko *.mod.* .*.cmd *~
+	$(RM) -r .tmp_versions
+
+install: all
+	install -D -m 644 ungrab-winmodem.ko $(INSTALL_DIR)/ungrab-winmodem.ko
+	/sbin/depmod -a
+uninstall:
+	modprobe -r ungrab-winmodem ; echo -n
+	$(RM) $(INSTALL_DIR)/ungrab-winmodem.ko
+	/sbin/depmod -a
+
