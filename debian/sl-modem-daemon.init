#!/bin/sh
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/slmodemd
NAME=slmodemd
PIDFILE=/var/run/$NAME.pid
DESC="SmartLink modem daemon"
modprobe="$(cat /proc/sys/kernel/modprobe 2>/dev/null || echo modprobe)"

test -x $DAEMON || exit 0

# there may be old options there...
test -r /etc/default/slmodemd && . /etc/default/slmodemd

# but most likely they are here
test -r /etc/default/sl-modem-daemon && . /etc/default/sl-modem-daemon

ALSADEVPREFIX=modem
driverlist="snd-intel8x0m snd-via82xx-modem snd-atiixp-modem"

config() {
   if test "$DONTSTART" = 1 ; then
      test "$BEQUIET" = 1 || echo "Not starting $DESC (options not set in /etc/default/slmodemd)"
      exit 0
   fi

   if test "$SLMODEMD_COUNTRY" ; then
      OPTS="$OPTS -c $SLMODEMD_COUNTRY"
   fi

   ALSA=`echo $SLMODEMD_DEVICE | grep :`
   
   if [ "`echo $SLMODEMD_DEVICE | grep auto`" ] ; then
      AUTO=yes
      
      if test -e /proc/asound/Modem ; then
         # ALSA driver is loaded, use it
         SLMODEMD_DEVICE=`readlink /proc/asound/Modem | sed s,card,$ALSADEVPREFIX:,`
         ALSA=yes
     else
         # ALSA not loaded yet? No modem? No driver?

         if grep -q 'slamr\..*o' /lib/modules/`uname -r`/modules.dep ;
         then
            # we have the smartlink driver, use it and assume to have
            # one modem
            $modprobe slamr
            SLMODEMD_DEVICE=slamr0
        else
            # or try to load alsa
            for x in $driverlist ; do $modprobe $x 2>/dev/null ; done

            tried_to_load=1
            
            DEV_SND_FILE=/proc/asound/Modem
            for start_reps in `seq 100` ; do
                test -r "$DEV_SND_FILE" && break
                : wait $start_reps for the kernel module to make the device $DEV_SND_FILE appear
                sleep 0.1
            done

            if test -e /proc/asound/Modem ; then
                # ALSA driver is loaded, use it
                SLMODEMD_DEVICE=`readlink /proc/asound/Modem | sed s,card,$ALSADEVPREFIX:,`
                ALSA=yes
            fi
         fi
      fi
   fi

   if [ "$ALSA" ] ; then
      OPTS="$OPTS $SLMODEMD_DEVICE"

      if ! test -e /proc/asound/Modem ; then

          # don't retry another time
          if ! test "$tried_to_load" ; then

              for x in $driverlist ; do $modprobe $x 2>/dev/null ; done

              DEV_SND_FILE=/proc/asound/Modem
              for start_reps in `seq 100` ; do
                  test -r "$DEV_SND_FILE" && break
                  : wait $start_reps for the kernel module to make the device $DEV_SND_FILE appear
                  sleep 0.1
              done
          fi
      fi

      if ! test -e /proc/asound/Modem ; then
          echo "Sorry, ALSA driver has been choosen by none of the drivers $driverlist could be loaded successfully."
          exit 1
      fi

   else

      if test "$SLMODEMD_DEVICE" ; then
         OPTS="$OPTS /dev/$SLMODEMD_DEVICE"
      fi

      # don't grep again if autodetection was already done
      test "$AUTO" && return 0

      if ! grep -q 'slamr\..*o' /lib/modules/`uname -r`/modules.dep
      then 
         echo "SmartLink modem driver not available for this Kernel. Please read README.Debian"
         echo "or try to install the package sl-modem-modules-`uname -r`. Exiting..."
         exit 1
      fi
   fi
}

start() {
   if [ "$ALSA" ] ; then
       # must be configured by the config rule above
      echo -n "Starting SmartLink Modem driver for: $SLMODEMD_DEVICE"
      start-stop-daemon --start --pidfile $PIDFILE --exec $DAEMON --make-pidfile --background --quiet -- --alsa $OPTS
   else
      grep 'slamr' -q /proc/modules || { 
         echo -n "Loading SmartLink Modem driver into kernel ... " 
         $modprobe slamr && echo "done." || {
            echo "failed."
            exit -1
         }
      }
#      if test "$SLMODEMD_DEVICE" && ! test -e /dev/$SLMODEMD_DEVICE ; then
#         mknod /dev/$SLMODEMD_DEVICE c 212 ${SLMODEMD_DEVICE#slamr}
#      fi
      echo -n "Starting SmartLink Modem driver for: $SLMODEMD_DEVICE"
      start-stop-daemon --start --pidfile $PIDFILE --exec $DAEMON --make-pidfile --background --quiet -- $OPTS
   fi
	RETVAL=$?
  if [ "$RETVAL" = 0 ] && [ "$NOSYMLINK" != 1 ] ; then
     echo "."
     echo "Creating /dev/modem symlink, pointing to: /dev/ttySL0."
     ln -sf ttySL0 /dev/modem
  fi
}

stop() {
	echo -n "Shutting down SmartLink Modem driver normally"
  RETVAL=0
  if [ "`pidof $NAME`" ] ; then 
     if start-stop-daemon --stop --quiet --pidfile $PIDFILE --exec $DAEMON --retry 1 ; then
        echo .
     else
        echo " probably failed."
        echo "Trying it the hard way (send SIGKILL all $NAME processes): " 
        killall -KILL $NAME || RETVAL=1
     fi
  else
     echo " ... no $NAME daemon running."
  fi
  test "$RETVAL" -ne 0 || rm -f "$PIDFILE"
  ! grep -q 'snd.intel8x0m' /proc/modules || { 
      echo -n "Unloading ALSA modem driver from kernel ... " 
      "$modprobe" -r snd-intel8x0m && echo "done." || {
	  echo "failed."
	  RETVAL=1
      }
  }
  ! grep -q 'slamr' /proc/modules || { 
      echo -n "Unloading SmartLink Modem driver from kernel ... " 
      "$modprobe" -r slamr && echo "done." || {
	  echo "failed."
	  RETVAL=1
      }
  }
  return "$RETVAL"
}

status() {
    echo -n "Status of $DESC: "
    if [ ! -r "$PIDFILE" ]; then
	echo "$NAME is not running."
	exit 3
    fi
    if read pid < "$PIDFILE" && ps -p "$pid" > /dev/null 2>&1; then
	echo "$NAME is running."
	exit 0
    else
	echo "$NAME is not running but $PIDFILE exists."
	exit 1
    fi
}

# See how we were called.
case "$1" in
#   usbcheck)
#   # test whether the init script is uptodate
#   exit 0
#   ;;
#   usbstart)
#   test -r /etc/default/slmodemd && . /etc/default/slmodemd
#   test -r /etc/default/sl-modem-daemon && . /etc/default/sl-modem-daemon
#   test "$2" && SLMODEMD_DEVICE="$2" || SLMODEMD_DEVICE=slusb0
#   unset DONTSTART
#   unset BEQUIET
#   config
#   start
#   ;;
   start)
   config
   start
   ;;
   stop)
   stop
   ;;
   restart|reload|force-reload)
   stop
   config
   start
   ;;
   status)
   status
   ;;
   *)
   echo "Usage: /etc/init.d/$NAME {start|stop|restart}"
   exit 1
esac

